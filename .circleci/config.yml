version: 2

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: "What branch am I on?"
          command: |
            echo ${CIRCLE_BRANCH}
      - run:
          name: "Setup ENV from branch name"
          command: |
            if [[ $CIRCLE_BRANCH == release/prod* ]];
            then
              echo 'export ENV=prod' >> $BASH_ENV
            else
              echo 'export ENV=stage' >> $BASH_ENV
            fi

            source $BASH_ENV
            echo ${ENV}
      - run:
          name: (api) terraform init & plan
          command: |
            source $BASH_ENV
            cd api
            terraform init -input=false
            terraform workspace select $ENV || terraform workspace new $ENV
            terraform plan -out tfapply -var-file variables.tfvars
      - run:
          name: (webapp) terraform init & plan
          command: |
            source $BASH_ENV
            cd webapp
            terraform init -input=false
            terraform workspace select $ENV || terraform workspace new $ENV
            terraform plan -out tfapply -var-file variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: (api) terraform apply
          command: |
            cd api
            terraform apply -auto-approve tfapply
      - run:
          name: (webapp) terraform apply
          command: |
            cd webapp
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: (webapp) terraform create destroy plan
          command: |
            cd webapp
            terraform plan -destroy -out tfdestroy -var-file variables.tfvars
      - run:
          name: (api) terraform create destroy plan
          command: |
            cd api
            terraform plan -destroy -out tfdestroy -var-file variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: (webapp) terraform destroy
          command: |
            cd webapp
            terraform apply -auto-approve tfdestroy
      - run:
          name: (api) terraform destroy
          command: |
            cd api
            terraform apply -auto-approve tfdestroy

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply:
          filters:
            branches:
              only:
                # Run the job if branch name contains `JIRA-<ticketnumber>` or `jira-<ticketnumber>`
                - /.*(jira|JIRA)-\d+.*/
                # Run the job if branch name starts with `release/prod/`
                - /release\/prod\/.*/
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy
